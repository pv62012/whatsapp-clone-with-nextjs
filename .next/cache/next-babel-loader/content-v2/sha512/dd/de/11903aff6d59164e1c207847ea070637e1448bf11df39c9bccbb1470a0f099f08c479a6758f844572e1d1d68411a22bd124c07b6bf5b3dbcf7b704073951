{"ast":null,"code":"import _defineProperty from \"C:/Users/Wait for magic/Documents/GitHub/whatsapp-clone-with-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"C:/Users/Wait for magic/Documents/GitHub/whatsapp-clone-with-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { auth, db } from '../firebase';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport '../styles/globals.css';\nimport Login from './Login';\nimport Loading from '../components/Loading';\nimport firebase from 'firebase';\nimport { useEffect } from 'react';\nimport \"tailwindcss/tailwind.css\";\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useAuthState = useAuthState(auth),\n      _useAuthState2 = _slicedToArray(_useAuthState, 2),\n      user = _useAuthState2[0],\n      loading = _useAuthState2[1];\n\n  useEffect(function () {\n    if (user) {\n      db.collection(\"users\").doc(user.uid).set({\n        email: user.email,\n        lastSeen: firebase.firestore.FieldValue.serverTimestamp(),\n        photoUrl: user.photoURL\n      }, {\n        merger: true\n      });\n    }\n\n    return function () {};\n  }, [user]);\n  if (loading) return /*#__PURE__*/_jsx(Loading, {});\n  if (!user) return /*#__PURE__*/_jsx(Login, {});\n  return /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps));\n}\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { IconButton } from '@material-ui/core';\nimport React from 'react';\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollection } from 'react-firebase-hooks/firestore';\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Chat from \"@material-ui/icons/Chat\";\nimport { Container, UserAvatar, IconsContainer, Header, Search, SearchInput, SidebarButton } from '../styles/SidebarStyled';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport * as EmailValidator from \"email-validator\";\nimport \"tailwindcss/tailwind.css\";\nimport { auth, db } from '../firebase';\nimport ChatComponent from './ChatComponent';\n\nfunction Sidebar() {\n  const [user] = useAuthState(auth);\n  const userChatRef = db.collection(\"chats\").where('users', 'array-contains', user === null || user === void 0 ? void 0 : user.email);\n  const [chatSnapshot] = useCollection(userChatRef);\n\n  const createChat = () => {\n    const input = prompt(\"Please enter an email address for the user you wish to chat with\");\n    if (!input) return null;\n\n    if (EmailValidator.validate(input) && !chatAlreadyExists(input) && input !== user.email) {\n      //we need to add chat in database\n      db.collection(\"chats\").add({\n        users: [user.email, input]\n      });\n    }\n  };\n\n  const chatAlreadyExists = recipientEmail => !!(chatSnapshot !== null && chatSnapshot !== void 0 && chatSnapshot.docs.find(chat => {\n    var _chat$data$users$find;\n\n    return ((_chat$data$users$find = chat.data().users.find(user => user === recipientEmail)) === null || _chat$data$users$find === void 0 ? void 0 : _chat$data$users$find.length) > 0;\n  }));\n\n  return /*#__PURE__*/_jsxs(Container, {\n    children: [/*#__PURE__*/_jsxs(Header, {\n      children: [/*#__PURE__*/_jsx(UserAvatar, {\n        src: user === null || user === void 0 ? void 0 : user.photoURL,\n        onClick: () => auth.signOut()\n      }), /*#__PURE__*/_jsxs(IconsContainer, {\n        children: [/*#__PURE__*/_jsx(IconButton, {\n          children: /*#__PURE__*/_jsx(Chat, {})\n        }), /*#__PURE__*/_jsx(MoreVertIcon, {})]\n      })]\n    }), /*#__PURE__*/_jsxs(Search, {\n      children: [/*#__PURE__*/_jsx(SearchIcon, {}), /*#__PURE__*/_jsx(SearchInput, {\n        placeholder: \"Search in chates\"\n      })]\n    }), /*#__PURE__*/_jsx(SidebarButton, {\n      onClick: createChat,\n      children: \"Start new chat\"\n    }), chatSnapshot === null || chatSnapshot === void 0 ? void 0 : chatSnapshot.docs.map(chat => /*#__PURE__*/_jsx(ChatComponent, {\n      id: chat.id,\n      users: chat.data().users\n    }, chat.id))]\n  });\n}\n\nexport default Sidebar;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wait for magic\\\\Documents\\\\GitHub\\\\whatsapp-clone-with-nextjs\\\\components\\\\ChatScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Avatar, IconButton } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport React, { useRef, useState } from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport styled from 'styled-components';\nimport { auth, db } from '../firebase';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { useCollection } from 'react-firebase-hooks/firestore';\nimport Message from './Message';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport firebase from 'firebase';\nimport getRecipientEmail from '../utils/getRecipientEmail';\nimport TimeAgo from 'timeago-react';\n\nfunction ChatScreen({\n  chat,\n  messages\n}) {\n  var _recipientSnapshot$do, _recipientSnapshot$do2, _recipient$lastSeen, _recipient$lastSeen2;\n\n  console.log(messages);\n  const [user] = useAuthState(auth);\n  const endOfMessageRef = useRef(null);\n  const router = useRouter();\n  const {\n    0: input,\n    1: setInput\n  } = useState(\"\");\n  const [messagesSnapshot] = useCollection(db.collection('chats').doc(router.query.id).collection(\"messages\").orderBy(\"timestamp\", \"asc\")); //  console.log(\"i am a problem 1 \", messagesSnapshot);\n\n  const [recipientSnapshot] = useCollection(db.collection('users').where(\"email\", \"==\", getRecipientEmail(chat.users, user)));\n\n  const showMessage = () => {\n    if (messagesSnapshot) {\n      return messagesSnapshot.docs.map(message => {\n        var _message$data, _message$data$timesta;\n\n        return (\n          /*#__PURE__*/\n          // console.log(message);\n          _jsxDEV(Message, {\n            user: message.data().user,\n            message: _objectSpread(_objectSpread({}, message.data()), {}, {\n              timestamp: (_message$data = message.data()) === null || _message$data === void 0 ? void 0 : (_message$data$timesta = _message$data.timestamp) === null || _message$data$timesta === void 0 ? void 0 : _message$data$timesta.toDate().getTime()\n            })\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 16\n          }, this)\n        );\n      });\n    } else {\n      //  console.log(messagesSnapshot);\n      console.log(messages);\n      return JSON.parse(messages).map(message => /*#__PURE__*/_jsxDEV(Message, {\n        user: message.user,\n        message: message\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this));\n    }\n  };\n\n  const ScrollToBottom = () => {\n    endOfMessageRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\"\n    });\n  };\n\n  const sendMessage = e => {\n    e.preventDefault();\n    db.collection('users').doc(user.uid).set({\n      lastSeen: firebase.firestore.FieldValue.serverTimestamp()\n    }, {\n      merge: true\n    });\n    db.collection('chats').doc(router.query.id).collection('messages').add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: input,\n      user: user.email,\n      photoURL: user.photoURL\n    });\n    setInput(\"\");\n    ScrollToBottom();\n  };\n\n  const recipient = recipientSnapshot === null || recipientSnapshot === void 0 ? void 0 : (_recipientSnapshot$do = recipientSnapshot.docs) === null || _recipientSnapshot$do === void 0 ? void 0 : (_recipientSnapshot$do2 = _recipientSnapshot$do[0]) === null || _recipientSnapshot$do2 === void 0 ? void 0 : _recipientSnapshot$do2.data();\n  const recipientEmail = getRecipientEmail(chat.users, user);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [recipient ? /*#__PURE__*/_jsxDEV(Avatar, {\n        src: recipient === null || recipient === void 0 ? void 0 : recipient.photoUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n        children: [\" \", recipientEmail[0], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 63\n      }, this), /*#__PURE__*/_jsxDEV(HeaderInformation, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", recipientEmail]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), recipientSnapshot ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last active:\", ' ', recipient !== null && recipient !== void 0 && (_recipient$lastSeen = recipient.lastSeen) !== null && _recipient$lastSeen !== void 0 && _recipient$lastSeen.toDate() ? /*#__PURE__*/_jsxDEV(TimeAgo, {\n            datetime: recipient === null || recipient === void 0 ? void 0 : (_recipient$lastSeen2 = recipient.lastSeen) === null || _recipient$lastSeen2 === void 0 ? void 0 : _recipient$lastSeen2.toDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 37\n          }, this) : \"Unavailable\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading last active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HeaderIcons, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          children: [/*#__PURE__*/_jsxDEV(AttachFileIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MessageContainer, {\n      className: \"h-screen p-8 bg-red-100\",\n      children: [showMessage(), /*#__PURE__*/_jsxDEV(EndOfMessage, {\n        ref: endOfMessageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      children: [/*#__PURE__*/_jsxDEV(InsertEmoticonIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !input,\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 7\n  }, this);\n}\n\nexport default ChatScreen;\nconst Container = styled.div.attrs({\n  className: \"h-full overflow-hidden\"\n})``;\nconst Header = styled.div.attrs({\n  className: \"sticky bg-white z-50 top-0 flex p-2 h-16 items-center border-b-2 border-gray-200\"\n})``;\nconst HeaderInformation = styled.div.attrs({\n  className: \"m-2 flex-1\"\n})``;\nconst HeaderIcons = styled.div.attrs({})``;\nconst MessageContainer = styled.div.attrs({\n  className: \"overflow-y-scroll \"\n})`\nheight:90vh;\n`;\nconst InputContainer = styled.div.attrs({\n  className: \"flex items-center p-3 sticky bottom-0 bg-white z-50\"\n})``;\nconst Input = styled.input.attrs({\n  className: \"flex-1 outline-none border-none rounded-xl bg-gray-50 p-2 ml-4 mr-4\"\n})``;\nconst EndOfMessage = styled.div.attrs({})`\nmargin-bottom:50px;\n`;","map":{"version":3,"sources":["C:/Users/Wait for magic/Documents/GitHub/whatsapp-clone-with-nextjs/components/ChatScreen.js"],"names":["Avatar","IconButton","useRouter","React","useRef","useState","useAuthState","styled","auth","db","AttachFileIcon","MoreVertIcon","useCollection","Message","InsertEmoticonIcon","MicIcon","firebase","getRecipientEmail","TimeAgo","ChatScreen","chat","messages","console","log","user","endOfMessageRef","router","input","setInput","messagesSnapshot","collection","doc","query","id","orderBy","recipientSnapshot","where","users","showMessage","docs","map","message","data","timestamp","toDate","getTime","JSON","parse","ScrollToBottom","current","scrollIntoView","behavior","block","sendMessage","e","preventDefault","uid","set","lastSeen","firestore","FieldValue","serverTimestamp","merge","add","email","photoURL","recipient","recipientEmail","photoUrl","target","value","Container","div","attrs","className","Header","HeaderInformation","HeaderIcons","MessageContainer","InputContainer","Input","EndOfMessage"],"mappings":"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","sourcesContent":["import { Avatar, IconButton } from '@material-ui/core'\r\nimport { useRouter } from 'next/router'\r\nimport React, { useRef, useState } from 'react'\r\nimport { useAuthState } from 'react-firebase-hooks/auth'\r\nimport styled from 'styled-components'\r\nimport { auth, db } from '../firebase'\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile'\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { useCollection } from 'react-firebase-hooks/firestore'\r\nimport Message from './Message'\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon'\r\nimport MicIcon from '@material-ui/icons/Mic'\r\nimport firebase from 'firebase'\r\nimport getRecipientEmail from '../utils/getRecipientEmail'\r\nimport TimeAgo from 'timeago-react';\r\nfunction ChatScreen({ chat, messages }) {\r\n    console.log(messages);\r\n    const [user] = useAuthState(auth)\r\n    const endOfMessageRef=useRef(null)\r\n    const router = useRouter();\r\n    const [input, setInput] = useState(\"\")\r\n    const [messagesSnapshot]=useCollection(db.collection('chats').doc(router.query.id).collection(\"messages\").orderBy(\"timestamp\", \"asc\"))\r\n        //  console.log(\"i am a problem 1 \", messagesSnapshot);\r\n    const [recipientSnapshot]=useCollection(db.collection('users').where(\"email\",\"==\", getRecipientEmail(chat.users, user)))\r\n    \r\n    const showMessage = () => {\r\n      \r\n        if (messagesSnapshot) {\r\n           \r\n            return messagesSnapshot.docs.map((message) =>( \r\n                // console.log(message);\r\n               <Message key={message.id} user={message.data().user}\r\n                    message={{\r\n                        ...message.data(),\r\n                        timestamp: message.data()?.timestamp?.toDate().getTime()\r\n                    }}\r\n                />\r\n            ))\r\n        } else {\r\n        //  console.log(messagesSnapshot);\r\n\r\n            console.log(messages);\r\n            return JSON.parse(messages).map((message) =>( \r\n                 <Message\r\n                    key={message.id}\r\n                    user={message.user}\r\n                    message={message}\r\n                  />\r\n            ))\r\n        }\r\n    }\r\n\r\n    const ScrollToBottom = () => {\r\n        endOfMessageRef.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block:\"start\",\r\n        })\r\n    }\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        db.collection('users').doc(user.uid).set({\r\n            lastSeen: firebase.firestore.FieldValue.serverTimestamp(),\r\n        }, { merge: true }\r\n        )\r\n        db.collection('chats').doc(router.query.id).collection('messages').add({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            message: input,\r\n            user: user.email,\r\n            photoURL: user.photoURL\r\n        })\r\n        setInput(\"\");\r\n        ScrollToBottom()\r\n    }\r\n    const recipient=recipientSnapshot?.docs?.[0]?.data()\r\n    const recipientEmail=getRecipientEmail(chat.users, user)\r\n    return (\r\n      <Container>\r\n        <Header>\r\n          {recipient ? <Avatar src={recipient?.photoUrl} /> : <Avatar > {recipientEmail[0]} </Avatar>}\r\n          <HeaderInformation>\r\n                    <h3> {recipientEmail}</h3>\r\n                    {\r\n                        recipientSnapshot ?\r\n                           ( <p>Last active:{' '}\r\n                                {\r\n                                    recipient?.lastSeen?.toDate() ? (\r\n                                    <TimeAgo datetime={recipient?.lastSeen?.toDate()}/>\r\n                            ): \"Unavailable\" }\r\n                            </p>) :\r\n                            (\r\n                                <p>Loading last active</p>\r\n                            )\r\n                    }\r\n           \r\n          </HeaderInformation>\r\n          <HeaderIcons>\r\n            <IconButton>\r\n              <AttachFileIcon />\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          </HeaderIcons>\r\n        </Header>\r\n        <MessageContainer className=\"h-screen p-8 bg-red-100\">\r\n          {showMessage()}\r\n          {/* <Message/> */}\r\n          <EndOfMessage ref={endOfMessageRef} />\r\n        </MessageContainer>\r\n        <InputContainer>\r\n          <InsertEmoticonIcon />\r\n          <Input value={input} onChange={(e) => setInput(e.target.value)} />\r\n          <button disabled={!input} onClick={sendMessage}>\r\n            Send\r\n          </button>\r\n          <MicIcon />\r\n        </InputContainer>\r\n      </Container>\r\n    );\r\n}\r\n\r\nexport default ChatScreen\r\n\r\nconst Container = styled.div.attrs({\r\n    className:\"h-full overflow-hidden\"\r\n})``;\r\n\r\nconst Header = styled.div.attrs({\r\n    className:\"sticky bg-white z-50 top-0 flex p-2 h-16 items-center border-b-2 border-gray-200\"\r\n})``\r\nconst HeaderInformation = styled.div.attrs({\r\nclassName:\"m-2 flex-1\" \r\n})``;\r\nconst HeaderIcons = styled.div.attrs({})``;\r\nconst MessageContainer = styled.div.attrs({\r\n    className:\"overflow-y-scroll \"\r\n})`\r\nheight:90vh;\r\n`;\r\nconst InputContainer = styled.div.attrs({\r\n\r\n     className:\"flex items-center p-3 sticky bottom-0 bg-white z-50\",\r\n})``;\r\nconst Input = styled.input.attrs({\r\n    className:\"flex-1 outline-none border-none rounded-xl bg-gray-50 p-2 ml-4 mr-4\",\r\n})``;\r\n\r\nconst EndOfMessage = styled.div.attrs({\r\n  \r\n})`\r\nmargin-bottom:50px;\r\n`;"]},"metadata":{},"sourceType":"module"}
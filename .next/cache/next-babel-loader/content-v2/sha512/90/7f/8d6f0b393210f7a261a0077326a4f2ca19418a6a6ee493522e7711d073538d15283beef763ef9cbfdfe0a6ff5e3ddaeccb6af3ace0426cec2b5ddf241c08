{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wait for magic\\\\Documents\\\\GitHub\\\\whatsapp-clone-with-nextjs\\\\components\\\\Sidebar.js\";\nimport { IconButton } from '@material-ui/core';\nimport React from 'react';\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollection } from 'react-firebase-hooks/firestore';\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Chat from \"@material-ui/icons/Chat\";\nimport { Container, UserAvatar, IconsContainer, Header, Search, SearchInput, SidebarButton } from '../styles/SidebarStyled';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport * as EmailValidator from \"email-validator\";\nimport { auth, db } from '../firebase';\n\nfunction Sidebar() {\n  const {\n    user\n  } = useAuthState(auth);\n  const userChatRef = db.collection(\"chats\").where('users', 'array-contains', user === null || user === void 0 ? void 0 : user.email);\n  const [chatSnapshot] = useCollection(userChatRef);\n\n  const createChat = () => {\n    const input = prompt(\"Please enter an email address for the user you wish to chat with\");\n    if (!input) return null;\n\n    if (EmailValidator.validate(input) && input !== (user === null || user === void 0 ? void 0 : user.email)) {\n      //we need to add chat in database\n      db.collection(\"chats\").add({\n        users: [user.email, input]\n      });\n    }\n  }; // const chatAlreadyExists = (recipientEmail) => \n  //    !!chatSnapshot?.docs.find((chat) => chat.data().users.find((user) => recipientEmail)?.length > 0);\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(UserAvatar, {\n        onClick: () => auth.signOut()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconsContainer, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      children: [/*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n        placeholder: \"Search in chates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SidebarButton, {\n      onClick: createChat,\n      children: \"Start new chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n\nexport default Sidebar;","map":{"version":3,"sources":["C:/Users/Wait for magic/Documents/GitHub/whatsapp-clone-with-nextjs/components/Sidebar.js"],"names":["IconButton","React","useAuthState","useCollection","MoreVertIcon","Chat","Container","UserAvatar","IconsContainer","Header","Search","SearchInput","SidebarButton","SearchIcon","EmailValidator","auth","db","Sidebar","user","userChatRef","collection","where","email","chatSnapshot","createChat","input","prompt","validate","add","users","signOut"],"mappings":";;AAAA,SAAUA,UAAV,QAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAAQC,aAAR,QAA4B,gCAA5B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,cAAhC,EAAgDC,MAAhD,EAAwDC,MAAxD,EAAgEC,WAAhE,EAA6EC,aAA7E,QAAkG,yBAAlG;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;AAEA,SAASC,IAAT,EAAeC,EAAf,QAAyB,aAAzB;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAWhB,YAAY,CAACa,IAAD,CAA7B;AACE,QAAMI,WAAW,GAAGH,EAAE,CAACI,UAAH,CAAc,OAAd,EAAuBC,KAAvB,CAA6B,OAA7B,EAAsC,gBAAtC,EAAwDH,IAAxD,aAAwDA,IAAxD,uBAAwDA,IAAI,CAAEI,KAA9D,CAApB;AACA,QAAM,CAAEC,YAAF,IAAkBpB,aAAa,CAACgB,WAAD,CAArC;;AACJ,QAAMK,UAAU,GAAG,MAAM;AACvB,UAAMC,KAAK,GAAGC,MAAM,CAClB,kEADkB,CAApB;AAIA,QAAI,CAACD,KAAL,EAAY,OAAO,IAAP;;AACZ,QAAIX,cAAc,CAACa,QAAf,CAAwBF,KAAxB,KAAiCA,KAAK,MAAGP,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,KAAT,CAA1C,EAA0D;AACxD;AACAN,MAAAA,EAAE,CAACI,UAAH,CAAc,OAAd,EAAuBQ,GAAvB,CAA2B;AACzBC,QAAAA,KAAK,EAAE,CAACX,IAAI,CAACI,KAAN,EAAaG,KAAb;AADkB,OAA3B;AAGD;AACF,GAZD,CAJmB,CAkBf;AACA;;;AAEA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,MAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAE,MAAIV,IAAI,CAACe,OAAL;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAA,gCACE,QAAC,UAAD;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUM,QAAC,MAAD;AAAA,8BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AAAa,QAAA,WAAW,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVN,eAcM,QAAC,aAAD;AAAe,MAAA,OAAO,EAAEN,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBH;;AAED,eAAeP,OAAf","sourcesContent":["import {  IconButton } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport {useCollection} from 'react-firebase-hooks/firestore'\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport Chat from \"@material-ui/icons/Chat\";\r\nimport { Container, UserAvatar, IconsContainer, Header, Search, SearchInput, SidebarButton } from '../styles/SidebarStyled';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport * as EmailValidator from \"email-validator\"\r\n\r\nimport { auth, db } from '../firebase';\r\n\r\nfunction Sidebar() {\r\n  const { user } = useAuthState(auth);\r\n    const userChatRef = db.collection(\"chats\").where('users', 'array-contains', user?.email)\r\n    const [ chatSnapshot] = useCollection(userChatRef);\r\nconst createChat = () => {\r\n  const input = prompt(\r\n    \"Please enter an email address for the user you wish to chat with\"\r\n  );\r\n\r\n  if (!input) return null;\r\n  if (EmailValidator.validate(input)&& input!==user?.email) {\r\n    //we need to add chat in database\r\n    db.collection(\"chats\").add({\r\n      users: [user.email, input],\r\n    });\r\n  }\r\n};\r\n\r\n    // const chatAlreadyExists = (recipientEmail) => \r\n    //    !!chatSnapshot?.docs.find((chat) => chat.data().users.find((user) => recipientEmail)?.length > 0);\r\n\r\n    return (\r\n      <Container>\r\n        <Header>\r\n          <UserAvatar onClick={()=>auth.signOut()} />\r\n          <IconsContainer>\r\n            <IconButton>\r\n              <Chat />\r\n            </IconButton>\r\n            <MoreVertIcon />\r\n          </IconsContainer>\r\n            </Header>\r\n            <Search>\r\n                <SearchIcon />\r\n                <SearchInput placeholder=\"Search in chates\"/>\r\n            </Search>\r\n            <SidebarButton onClick={createChat}>\r\n                Start new chat\r\n            </SidebarButton>\r\n      </Container>\r\n    );\r\n}\r\n\r\nexport default Sidebar\r\n"]},"metadata":{},"sourceType":"module"}
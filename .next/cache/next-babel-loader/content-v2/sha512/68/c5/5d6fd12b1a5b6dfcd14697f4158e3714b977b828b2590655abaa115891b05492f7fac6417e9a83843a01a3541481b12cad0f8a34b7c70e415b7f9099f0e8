{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/Wait for magic/Documents/GitHub/whatsapp-clone-with-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Wait for magic\\\\Documents\\\\GitHub\\\\whatsapp-clone-with-nextjs\\\\components\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport { IconButton } from '@material-ui/core';\nimport React from 'react';\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollection } from 'react-firebase-hooks/firestore';\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Chat from \"@material-ui/icons/Chat\";\nimport { Container, UserAvatar, IconsContainer, Header, Search, SearchInput, SidebarButton } from '../styles/SidebarStyled';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport * as EmailValidator from \"email-validator\";\nimport \"tailwindcss/tailwind.css\";\nimport { auth, db } from '../firebase';\nimport ChatComponent from './ChatComponent';\n\nfunction Sidebar() {\n  _s();\n\n  var _this = this;\n\n  var _useAuthState = useAuthState(auth),\n      _useAuthState2 = _slicedToArray(_useAuthState, 1),\n      user = _useAuthState2[0];\n\n  var userChatRef = db.collection(\"chats\").where('users', 'array-contains', user === null || user === void 0 ? void 0 : user.email);\n\n  var _useCollection = useCollection(userChatRef),\n      _useCollection2 = _slicedToArray(_useCollection, 1),\n      chatSnapshot = _useCollection2[0];\n\n  var createChat = function createChat() {\n    var input = prompt(\"Please enter an email address for the user you wish to chat with\");\n    if (!input) return null;\n\n    if (EmailValidator.validate(input) && !chatAlreadyExists(input) && input !== user.email) {\n      //we need to add chat in database\n      db.collection(\"chats\").add({\n        users: [user.email, input]\n      });\n    }\n  };\n\n  var chatAlreadyExists = function chatAlreadyExists(recipientEmail) {\n    return !!(chatSnapshot !== null && chatSnapshot !== void 0 && chatSnapshot.docs.find(function (chat) {\n      var _chat$data$users$find;\n\n      return ((_chat$data$users$find = chat.data().users.find(function (user) {\n        return user === recipientEmail;\n      })) === null || _chat$data$users$find === void 0 ? void 0 : _chat$data$users$find.length) > 0;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(UserAvatar, {\n        src: user === null || user === void 0 ? void 0 : user.photoURL,\n        onClick: function onClick() {\n          return auth.signOut();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconsContainer, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      children: [/*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n        placeholder: \"Search in chates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SidebarButton, {\n      onClick: createChat,\n      children: \"Start new chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), chatSnapshot === null || chatSnapshot === void 0 ? void 0 : chatSnapshot.docs.map(function (chat) {\n      return /*#__PURE__*/_jsxDEV(ChatComponent, {\n        id: chat.id,\n        users: chat.data().users\n      }, chat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Sidebar, \"7luWkeeuCoSKy52gQDZfZ5btdwg=\", false, function () {\n  return [useAuthState, useCollection];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/Users/Wait for magic/Documents/GitHub/whatsapp-clone-with-nextjs/components/Sidebar.js"],"names":["IconButton","React","useAuthState","useCollection","MoreVertIcon","Chat","Container","UserAvatar","IconsContainer","Header","Search","SearchInput","SidebarButton","SearchIcon","EmailValidator","auth","db","ChatComponent","Sidebar","user","userChatRef","collection","where","email","chatSnapshot","createChat","input","prompt","validate","chatAlreadyExists","add","users","recipientEmail","docs","find","chat","data","length","photoURL","signOut","map","id"],"mappings":"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","sourcesContent":["import {  IconButton } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport {useCollection} from 'react-firebase-hooks/firestore'\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport Chat from \"@material-ui/icons/Chat\";\r\nimport { Container, UserAvatar, IconsContainer, Header, Search, SearchInput, SidebarButton } from '../styles/SidebarStyled';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport * as EmailValidator from \"email-validator\"\r\nimport \"tailwindcss/tailwind.css\";\r\nimport { auth, db } from '../firebase';\r\nimport ChatComponent from './ChatComponent';\r\n\r\nfunction Sidebar() {\r\n  const [user] = useAuthState(auth);\r\n\r\n    const userChatRef = db.collection(\"chats\").where('users', 'array-contains', user?.email)\r\n  const [chatSnapshot] = useCollection(userChatRef);\r\n \r\nconst createChat = () => {\r\n  const input = prompt(\r\n    \"Please enter an email address for the user you wish to chat with\"\r\n  );\r\n\r\n  if (!input) return null;\r\n  if (\r\n    EmailValidator.validate(input) &&\r\n    !chatAlreadyExists(input)  &&\r\n    input !== user.email\r\n  ) {\r\n    //we need to add chat in database\r\n    db.collection(\"chats\").add({\r\n      users: [user.email, input],\r\n    });\r\n  }\r\n};\r\n\r\n    const chatAlreadyExists = (recipientEmail) => \r\n       !!chatSnapshot?.docs.find((chat) => chat.data().users.find((user) =>user=== recipientEmail)?.length > 0);\r\n\r\n    return (\r\n      <Container>\r\n        {/* {console.log(user?.photoURL)} */}\r\n        <Header>\r\n          <UserAvatar src={user?.photoURL} onClick={()=>auth.signOut()} />\r\n          <IconsContainer>\r\n            <IconButton>\r\n              <Chat />\r\n            </IconButton>\r\n            <MoreVertIcon />\r\n          </IconsContainer>\r\n            </Header>\r\n            <Search>\r\n                <SearchIcon />\r\n                <SearchInput placeholder=\"Search in chates\"/>\r\n            </Search>\r\n            <SidebarButton onClick={createChat}>\r\n          Start new chat\r\n            </SidebarButton>\r\n        \r\n        {/* list of chats contact */}\r\n     \r\n        {\r\n          chatSnapshot?.docs.map((chat) => (\r\n            <ChatComponent key={chat.id} id={chat.id} users={chat.data().users}/>\r\n          ))\r\n        }\r\n      </Container>\r\n    );\r\n}\r\n\r\nexport default Sidebar\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wait for magic\\\\Documents\\\\GitHub\\\\whatsapp-clone-with-nextjs\\\\pages\\\\chat\\\\[id].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport styled from 'styled-components';\nimport Sidebar from '../../components/Sidebar';\nimport ChatScreen from '../../components/ChatScreen';\nimport { db } from '../../firebase';\n\nfunction Chat() {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n      children: /*#__PURE__*/_jsxDEV(ChatScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\nexport default Chat;\nexport async function getServerSideProps(context) {\n  const ref = db.collection(\"chats\").doc(context.query.id);\n  const messagesRes = await ref.collection(\"messages\").orderBy(\"timestamp\", \"asc\").get();\n  const messages = messagesRes.docs.map(doc => _objectSpread({\n    id: doc.id\n  }, doc.data())).map(messages => _objectSpread(_objectSpread({}, messages), {}, {\n    timestamp: messages.timestamp.toDate().getTime()\n  })); //PREP ThE Chats\n\n  const chatRes = await ref.get();\n\n  const chat = _objectSpread({\n    id: chatRes.id\n  }, chatRes.data());\n\n  return {\n    props: {\n      messages: JSON.stringify(messages),\n      chat: chat\n    }\n  };\n}\nconst Container = styled.div.attrs({\n  className: \"flex\"\n})``;\nconst ChatContainer = styled.div.attrs({\n  className: \"flex-1 overflow-scroll h-full\"\n})``;","map":{"version":3,"sources":["C:/Users/Wait for magic/Documents/GitHub/whatsapp-clone-with-nextjs/pages/chat/[id].js"],"names":["React","Head","styled","Sidebar","ChatScreen","db","Chat","getServerSideProps","context","ref","collection","doc","query","id","messagesRes","orderBy","get","messages","docs","map","data","timestamp","toDate","getTime","chatRes","chat","props","JSON","stringify","Container","div","attrs","className","ChatContainer"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,EAAT,QAAmB,gBAAnB;;AACA,SAASC,IAAT,GAAgB;AACZ,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,aAAD;AAAA,6BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;AAED,eAAeA,IAAf;AAEA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAC9C,QAAMC,GAAG,GAAGJ,EAAE,CAACK,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BH,OAAO,CAACI,KAAR,CAAcC,EAAzC,CAAZ;AAEA,QAAMC,WAAW,GAAG,MAAML,GAAG,CAACC,UAAJ,CAAe,UAAf,EAA2BK,OAA3B,CAAmC,WAAnC,EAAgD,KAAhD,EAAuDC,GAAvD,EAA1B;AAEA,QAAMC,QAAQ,GAAGH,WAAW,CAACI,IAAZ,CAAiBC,GAAjB,CAAqBR,GAAG;AACrCE,IAAAA,EAAE,EAAEF,GAAG,CAACE;AAD6B,KAElCF,GAAG,CAACS,IAAJ,EAFkC,CAAxB,EAGbD,GAHa,CAGTF,QAAQ,oCACTA,QADS;AAEZI,IAAAA,SAAS,EAAEJ,QAAQ,CAACI,SAAT,CAAmBC,MAAnB,GAA4BC,OAA5B;AAFC,IAHC,CAAjB,CAL8C,CAa9C;;AACA,QAAMC,OAAO,GAAG,MAAMf,GAAG,CAACO,GAAJ,EAAtB;;AACA,QAAMS,IAAI;AACNZ,IAAAA,EAAE,EAAEW,OAAO,CAACX;AADN,KAEHW,OAAO,CAACJ,IAAR,EAFG,CAAV;;AAKA,SAAO;AACHM,IAAAA,KAAK,EAAE;AACHT,MAAAA,QAAQ,EAAEU,IAAI,CAACC,SAAL,CAAeX,QAAf,CADP;AAEHQ,MAAAA,IAAI,EAACA;AAFF;AADJ,GAAP;AAMH;AACD,MAAMI,SAAS,GAAG3B,MAAM,CAAC4B,GAAP,CAAWC,KAAX,CAAiB;AAC/BC,EAAAA,SAAS,EAAC;AADqB,CAAjB,CAEf,EAFH;AAGA,MAAMC,aAAa,GAAG/B,MAAM,CAAC4B,GAAP,CAAWC,KAAX,CAAiB;AACrCC,EAAAA,SAAS,EAAE;AAD0B,CAAjB,CAEnB,EAFH","sourcesContent":["import React from 'react'\r\nimport Head from 'next/head'\r\nimport styled from 'styled-components'\r\nimport Sidebar from '../../components/Sidebar'\r\nimport ChatScreen from '../../components/ChatScreen'\r\nimport { db } from '../../firebase'\r\nfunction Chat() {\r\n    return (\r\n        <Container>\r\n            <Head>\r\n              <title>Chat</title>\r\n            </Head>\r\n            <Sidebar />\r\n            <ChatContainer>\r\n                <ChatScreen/>\r\n            </ChatContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n\r\nexport async function getServerSideProps(context) {\r\n    const ref = db.collection(\"chats\").doc(context.query.id);\r\n\r\n    const messagesRes = await ref.collection(\"messages\").orderBy(\"timestamp\", \"asc\").get();\r\n\r\n    const messages = messagesRes.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n    })).map(messages => ({\r\n        ...messages,\r\n        timestamp: messages.timestamp.toDate().getTime()\r\n    }));\r\n\r\n    //PREP ThE Chats\r\n    const chatRes = await ref.get();\r\n    const chat = {\r\n        id: chatRes.id,\r\n        ...chatRes.data()\r\n    }\r\n\r\n    return {\r\n        props: {\r\n            messages: JSON.stringify(messages),\r\n            chat:chat\r\n        }\r\n    }\r\n}\r\nconst Container = styled.div.attrs({ \r\n    className:\"flex\"\r\n})``;\r\nconst ChatContainer = styled.div.attrs({\r\n  className: \"flex-1 overflow-scroll h-full\",\r\n})``;"]},"metadata":{},"sourceType":"module"}
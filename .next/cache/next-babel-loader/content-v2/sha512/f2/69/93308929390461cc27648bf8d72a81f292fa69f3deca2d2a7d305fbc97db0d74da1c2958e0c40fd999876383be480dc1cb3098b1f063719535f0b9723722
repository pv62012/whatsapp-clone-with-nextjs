{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wait for magic\\\\Documents\\\\GitHub\\\\whatsapp-clone-with-nextjs\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { auth, db } from '../firebase';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport '../styles/globals.css';\nimport Login from './Login';\nimport Loading from '../components/Loading';\nimport firebase from 'firebase';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const [user, loading] = useAuthState(auth);\n  useEffect(() => {\n    if (user) {\n      db.collection(\"users\").doc(user.uid).set({\n        email: user.email,\n        lastSeen: firebase.firestore.FieldValue.serverTimestamp(),\n        photoUrl: user.photoURL\n      }, {\n        merger: true\n      });\n    }\n\n    return () => {};\n  }, [user]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 22\n  }, this);\n  if (!user) return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/Wait for magic/Documents/GitHub/whatsapp-clone-with-nextjs/pages/_app.js"],"names":["auth","db","useAuthState","Login","Loading","firebase","MyApp","Component","pageProps","user","loading","useEffect","collection","doc","uid","set","email","lastSeen","firestore","FieldValue","serverTimestamp","photoUrl","photoURL","merger"],"mappings":";;;;;;;;;AAAA,SAASA,IAAT,EAAeC,EAAf,QAAyB,aAAzB;AACA,SAAQC,YAAR,QAA2B,2BAA3B;AACA,OAAO,uBAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AACA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,YAAY,CAACF,IAAD,CAApC;AAEAW,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIF,IAAJ,EAAU;AACVR,MAAAA,EAAE,CAACW,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BJ,IAAI,CAACK,GAAhC,EAAqCC,GAArC,CAAyC;AACvCC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAD2B;AAEvCC,QAAAA,QAAQ,EAAEZ,QAAQ,CAACa,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EAF6B;AAGvCC,QAAAA,QAAQ,EAACZ,IAAI,CAACa;AAHyB,OAAzC,EAIE;AAACC,QAAAA,MAAM,EAAC;AAAR,OAJF;AAKC;;AAED,WAAO,MAAM,CAEZ,CAFD;AAGD,GAZQ,EAYN,CAACd,IAAD,CAZM,CAAT;AAaA,MAAGC,OAAH,EAAY,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,MAAG,CAACD,IAAJ,EAAU,oBAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACV,sBAAO,QAAC,SAAD,oBAAeD,SAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,eAAeF,KAAf","sourcesContent":["import { auth, db } from '../firebase';\nimport {useAuthState} from 'react-firebase-hooks/auth'\nimport '../styles/globals.css'\nimport Login from './Login';\nimport Loading from '../components/Loading';\nimport firebase from 'firebase';\nfunction MyApp({ Component, pageProps }) {\n  const [user, loading] = useAuthState(auth);\n\n  useEffect(() => {\n    if (user) {\n    db.collection(\"users\").doc(user.uid).set({\n      email: user.email,\n      lastSeen: firebase.firestore.FieldValue.serverTimestamp(),\n      photoUrl:user.photoURL\n    },{merger:true});  \n    }\n    \n    return () => {\n      \n    }\n  }, [user])\n  if(loading) return <Loading/>\n  if(!user) return <Login/>\n  return <Component {...pageProps} />\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}